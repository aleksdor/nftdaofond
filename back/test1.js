// --- Инициализация 
// - Задеплоить контракт Токена
// - Получить адрес контракта Токена и сохранить в конфиг.

// - Задеплоить контракт Аукциона.
// - Получить адрес контракта Аукциона и сохранить в конфиг.

// - Задеплоить контракт DAO(адрес токена).
// - Получить адрес контракта DAO и сохранить в конфиг.



// --- Создание токена

// - Получить хеш текущего блока
// - Сгенерировать случайный набор характеристик.
// - Сгенерировать по ним картинку токена.
// - Залить токен в ipfs
// - Создать json-токена (используя адрес картинки)
// - Залить json-токена в ipfs.
// - Создать токен для указанного адреса.
// - Получить адрес токена по uri.


// --- Создание аукциона

// - Доверить токен аукциону
// - Создать аукцион для токена

// - Получили ставку
//      - Забрать деньги на контракт аукциона
//      - Добавить ставку в список
//      - Увеличить минимальную ставку на (??? %, долю, статик) от текущей

// - Проверять время завершения аукциона.
// - Аукцион закончился
//      - Закрыть аукцион
//      - Переслать токен победителю.
//      - Вернуть деньги проигравшим.


// --- Регистрация цели (голосование)

// - Получить данные цели (вызова)
// - Сгенерировать из цели bytecode
// - Проверить есть ли токены для создания цели
// - Если токенов не хватает, ругнуться и выйти -
// - Добавить цель в список (срок голосования?)

// - На сайт показать все голосования со статусами и кнопкой за/против
// - Кто-то проголосовал за
// - Отправить голос в контракт
// - Если есть положительное решение(кворум), то выполнить запрос
// - Если есть отрицательное решение(антикворум), то закрыть запрос

// - Периодически проверять голосования. Если какое-то истекает, то отвергать его по timeout